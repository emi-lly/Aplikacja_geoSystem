<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhMpDT96Ch3lyFxy94Ks6XQHF0jons4I8&callback=initMap" type="text/javascript"></script>
@{
    ViewData["Title"] = "Execute";
}

<h2>Execute</h2>

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model Aplikacja.Models.IPinfo3

@{
    <h2>Informacja o adresie IP: @Html.DisplayFor(model => model.ipaddress)</h2>


    <table>
        <tr>
            <th>Country Name:</th>
            <td>@Html.DisplayFor(model => model.countryName)</td>
        </tr>
        <tr>
            <th>Country Code:</th>
            <td>@Html.DisplayFor(model => model.countryCode)</td>
        </tr>
        <tr>
            <th>City Name:</th>
            <td>@Html.DisplayFor(model => model.cityName)</td>
        </tr>
        <tr>
            <th>Region Name:</th>
            <td>@Html.DisplayFor(model => model.regionName)</td>
        </tr>
        <tr>
            <th>Zip Code:</th>
            <td>@Html.DisplayFor(model => model.zipCode)</td>
        </tr>
        <tr>
            <th>Longitude:</th>
            <td>@Html.DisplayFor(model => model.longitude)</td>
        </tr>
        <tr>
            <th>Latitude:</th>
            <td>@Html.DisplayFor(model => model.latitude)</td>
        </tr>
        <tr>
            <th>Time zone:</th>
            <td>@Html.DisplayFor(model => model.timeZone)</td>
        </tr>



    </table>
}
<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br />
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 550px;"></div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">

    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        var longitude1 = "@Model.longitude";
        var latitude1 = "@Model.latitude";

        var longitude = longitude1.replace(",", ".");
        var latitude = latitude1.replace(",", ".");

        //document.write(longitude);

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
            google.maps.visualRefresh = true;
            var Tunisie = new google.maps.LatLng(latitude, longitude);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 8,
            center: Tunisie,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
            var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // a sample list of JSON encoded data of places to visit in Tunisia
        // you can either make up a JSON list server side, or call it from a controller using JSONResult
        var data = [
                  { "Id": 1, "PlaceName": "Zaghouan", "GeoLong": "36.401081", "GeoLat": "10.16596" },
                  { "Id": 2, "PlaceName": "Hammamet ", "GeoLong": "36.4", "GeoLat": "10.616667" },
                  { "Id": 3, "PlaceName": "Sousse", "GeoLong": "35.8329809", "GeoLat": "10.63875" },
                  { "Id": 4, "PlaceName": "Sfax", "GeoLong": "34.745159", "GeoLat": "10.7613" }
               ];

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
       // $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': Tunisie,
                'map': map,
                //'title': item.PlaceName
            });

            // Make the marker-pin blue!
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

            //document.write(longitude1);


        //})
    }


        </script>
    </section>
}






